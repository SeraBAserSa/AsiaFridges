// <auto-generated />
using AsiaFridges.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AsiaFridges.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AsiaFridges.Models.Fridge", b =>
                {
                    b.Property<int>("FridgeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FridgeID"));

                    b.Property<int>("FridgeCapacity")
                        .HasColumnType("int");

                    b.Property<string>("FridgeDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FridgeModel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FridgeStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("FridgeID");

                    b.ToTable("Fridges");

                    b.HasData(
                        new
                        {
                            FridgeID = 1,
                            FridgeCapacity = 350,
                            FridgeDescription = "Samsung Refrigerator ,stainless steel finish.",
                            FridgeModel = "RT38K5982SL",
                            FridgeStatus = "Available",
                            Price = 8499.9899999999998
                        },
                        new
                        {
                            FridgeID = 2,
                            FridgeCapacity = 400,
                            FridgeDescription = "LG Bottom Freezer ,cooling efficiency.",
                            FridgeModel = "LFC25760SW",
                            FridgeStatus = "Available",
                            Price = 3499.9899999999998
                        },
                        new
                        {
                            FridgeID = 3,
                            FridgeCapacity = 500,
                            FridgeDescription = "Side by Side , with ice maker.",
                            FridgeModel = "GSS25GSHSS",
                            FridgeStatus = "Under Maintenance",
                            Price = 12999.99
                        },
                        new
                        {
                            FridgeID = 4,
                            FridgeCapacity = 150,
                            FridgeDescription = "Whirlpool, ideal for small space.",
                            FridgeModel = "Mini  WRT312CZJW",
                            FridgeStatus = "Available",
                            Price = 2499.9899999999998
                        },
                        new
                        {
                            FridgeID = 5,
                            FridgeCapacity = 100,
                            FridgeDescription = "Wine Enthusiast ,with temperature settings.",
                            FridgeModel = "Wine Cooler 272 03 03",
                            FridgeStatus = "Available",
                            Price = 5299.9899999999998
                        },
                        new
                        {
                            FridgeID = 6,
                            FridgeCapacity = 80,
                            FridgeDescription = "Frigidaire ,for beverages .",
                            FridgeModel = "Bar  EFR492",
                            FridgeStatus = "In Transit",
                            Price = 3699.9899999999998
                        });
                });

            modelBuilder.Entity("AsiaFridges.Models.FridgeType", b =>
                {
                    b.Property<int>("FridgeTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FridgeTypeID"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("FridgeTypeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("FridgeTypeID");

                    b.ToTable("FridgeTypes");

                    b.HasData(
                        new
                        {
                            FridgeTypeID = 1,
                            DisplayOrder = 1,
                            FridgeTypeName = "Top Freezer"
                        },
                        new
                        {
                            FridgeTypeID = 2,
                            DisplayOrder = 2,
                            FridgeTypeName = "Bottom Freezer"
                        },
                        new
                        {
                            FridgeTypeID = 3,
                            DisplayOrder = 3,
                            FridgeTypeName = "Side-by-Side"
                        },
                        new
                        {
                            FridgeTypeID = 4,
                            DisplayOrder = 4,
                            FridgeTypeName = "Mini Fridge"
                        },
                        new
                        {
                            FridgeTypeID = 5,
                            DisplayOrder = 5,
                            FridgeTypeName = "Wine Cooler"
                        },
                        new
                        {
                            FridgeTypeID = 6,
                            DisplayOrder = 6,
                            FridgeTypeName = "Bar Fridge"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
